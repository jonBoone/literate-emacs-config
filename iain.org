#+SETUPFILE: "~/.emacs.d/org-config.org"
#+TITLE: My org-babel based emacs configuration
#+LANGUAGE: en
#+OPTIONS: H:5 toc:nil creator:nil email:nil author:t timestamp:t tags:nil tex:verbatim
#+PROPERTY: header-args :noweb no-export

Last update: call_last_modified() :exports results

* Overview

I'm creating a literate programming emacs configuration setup leveraging org-babel.  Partially, this is to create my own highly customized and modular emacs configuration.  However, I've been experimenting with literate programming style emacs configurations for a while and wanted to try my hand at creating my own.

The first example of a literate emacs configuration, which I used as a basis initially, was [[https://github.com/mrvdb/emacs-config][Marcel van der Boom's emacs-config]] on [[https://github.com][GitHub]] .  I forked that repo and made a few modifications, but realized that in order to truly understand the way org-mode and its associated modules work, I needed to start from scratch with with a minimal literate emacs configuration and work my way up to a more full featured configuration incrementally.

#+TOC: headlines 4

* Guiding Principles

In creating this configuration, I am attempting to leverage the following principles:

1. The emacs configuration files should leverage literate programming style as much as possible.
2. The various emacs features (excluding =straight=, =use-package= and basic =org-mode=) should be compartmentalized into separate files.
3. The configuration sections that are system/context-specific (such as work/home or Linux/macOS) should be separately compartmentalized and able to be pulled from separate repository servers.

* Bootstrapping A Literate Configuration

To bootstrap the literate configuration, there are a few items to attend to first.  In =early-init.el=, we disable the use of the built-in /package.el/ so that we can leverage /straight.el/ as the backend for /use-packge/:
#+INCLUDE: "~/.emacs.d/early-init.el" src emacs-lisp

The next file that is leveraged is =init.el=.  This file first deactivates any org-mode that was shipped with the Emacs installation and then leverages a local copy that we installed ourselves.
#+INCLUDE: "~/.emacs.d/init.el" src emacs-lisp

* Org-Roam

I am initialy intending to configure Emacs for use of Org-Roam exclusivley.  The Org-Roam configuration will be stored in /org-roam.org/ in my ${HOME}/.emacs.d/org-roam.org file.
#+INCLUDE "~/.emacs.d/org-roam.org" src emacs-lisp

#+NAME: org-roam.org
#+BEGIN_SRC emacs-lisp
  (use-package org-roam
    :ensure t)
#+END_SRC



#+NAME: last_modified
#+BEGIN_SRC shell :results output verbatim raw none
  git log -1 --pretty="format:%ci" ~/.emacs.d/iain.org
#+END_SRC


#+begin_src emacs-lisp
  (provide 'iain)
  ;;; iain ends here
#+end_src
